syntax = "proto3";
package ems.v1;

import "cosmos/msg/v1/msg.proto";
import "ems/v1/genesis.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/rollchains/dmhackmoschain/x/ems/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a governance operation for updating the parameters.
  //
  // Since: cosmos-sdk 0.47
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);

  rpc MsgCreateEvent(MsgCreateEventParams) returns (MsgCreateEventResponse);

  rpc MsgIssueEventNFT(MsgIssueEventNFTParams) returns (MsgIssueEventNFTResponse);

  rpc MsgAddEventOrganizer (MsgAddEventOrganizerParams) returns (MsgAddEventOrganizerResponse);

  rpc MsgUpdateEventStatus (MsgUpdateEventStatusParams) returns (MsgUpdateEventStatusResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address of the governance account.
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParamsResponse {}

message MsgCreateEventParams {
    option (cosmos.msg.v1.signer) = "organizer";

    string organizer = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

    string name = 2;

    string id = 3;

    int32 nft_price = 4;

    int32 token_price = 5;

    int64 token_supply = 6;

    int32 max_organizers = 7;
}
  
message MsgCreateEventResponse {}

message MsgIssueEventNFTParams {
    option (cosmos.msg.v1.signer) = "receiver";

    string receiver = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];

    string id = 3;

    bool nft = 4;
}
  
message MsgIssueEventNFTResponse {}

message MsgAddEventOrganizerParams {
    option (cosmos.msg.v1.signer) = "organizer";

    string organizer = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

    string member = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];

    string id = 3;
}
  
message MsgAddEventOrganizerResponse {}

message MsgUpdateEventStatusParams {
    option (cosmos.msg.v1.signer) = "organizer";

    string organizer = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

    string id = 2;

    bool active = 3;
}
  
message MsgUpdateEventStatusResponse {}
